version: '3'

services:
  dbservice:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: Pk@123001
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 --password=$$MYSQL_PASSWORD
      timeout: 20s
      retries: 10
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - bootapp

  appservice:
    build: .
    depends_on:
       dbservice:
         condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://dbservice:3306/Marketing?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pk@123001
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES: localhost:9300
      SPRING_ELASTICSEARCH_CLUSTER_NAME: my-elasticsearch-cluster
      SPRING_DATA_ELASTICSEARCH_REPOSITORIES_INDEX_CREATION_STRATEGY: create
      SPRING_DATA_ELASTICSEARCH_REPOSITORIES_INDEX_NAME: product_index
      SPRING_ELASTICSEARCH_REST_CONNECTION_TIMEOUT: 10000
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_ELASTICSEARCH: DEBUG
      SPRING_ELASTICSEARCH_REPOSITORIES_ENABLED: none
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER: TRACE
      SPRING_JPA_GENERATE_DDL: "true"
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - app_data:/path/to/app_data
    ports:
      - 8081:8080
    networks:
      - bootapp


  frontend:
      container_name: frontend
      build: ./Commercial
      depends_on:
        - appservice
      ports:
        - 5173:5173
      stdin_open: true
      environment:
        CHOKIDAR_USEPOLLING: "true"
      command: npm run dev
      networks:
        - bootapp
      volumes:
      - /app/node_modules
      - ./Commercial:/app


  es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: es8
    environment:
      - node.name=es8
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es8_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - bootapp




networks:
  bootapp:

volumes:
  db_data:
  app_data:
  es8_data:

